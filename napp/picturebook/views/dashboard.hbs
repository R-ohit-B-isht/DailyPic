<!-- views/dashboard.hbs -->

<div class="container">
  <h4>News Items</h4>

  <div class="row">
    {{#each newsItems}}
      <div class="col s12 m6 l4">
        <a href="/news/{{this.id}}" class="news-card-link">
          <div class="card large hoverable {{#if markedAsRead}}marked-as-read{{/if}}">
            <div class="card-content">
              <span class="card-title">{{this.title}}</span>
              <p class="truncate">{{this.text}}</p>
              <p class="truncate">Posted on: {{this.postedOn}}</p>
              <p class="truncate">Upvotes: {{this.upvotes}}</p>
              <p class="truncate">Comments: {{this.descendants}}</p>
            </div>
            <div class="card-action">
              
                <a class="btn-small mark-read" onclick="markAsRead('{{this._id}}', '{{this.id}}')">Mark as Read</a>
                <a class="btn-small delete-item" onclick="deleteItem('{{this._id}}')">Delete</a>
              
            </div>
          </div>
        </a>
      </div>
    {{/each}}
  </div>

<ul class="pagination">
  {{#if totalPagesGreaterThan5}}
    {{#if showFirst}}
      <li class="{{#if currentPageEquals1}}active{{/if}} pagination-item">
        <a href="/dashboard?page=1" class="pagination-link" onmouseover="genieEffect(this)" onmouseout="resetGenieEffect(this)">1</a>
      </li>
      <div class="pagination-link">. . . </div>
    {{/if}}

    {{#each visiblePages}}
      <li class="{{#if active}}active{{/if}} pagination-item">
        <a href="/dashboard?page={{number}}" class="pagination-link" onmouseover="genieEffect(this)" onmouseout="resetGenieEffect(this)">{{number}}</a>
      </li>
    {{/each}}

    {{#if showLast}} 
    <div class="pagination-link">. . . </div>
      <li class="{{#if currentPageEqualsTotal}}active{{/if}} pagination-item">
        <a href="/dashboard?page={{totalPages}}" class="pagination-link" onmouseover="genieEffect(this)" onmouseout="resetGenieEffect(this)">{{totalPages}}</a>
      </li>
    {{/if}}
  {{else}}
    {{#each visiblePages}}
      <li class="{{#if active}}active{{/if}} pagination-item">
        <a href="/dashboard?page={{number}}" class="pagination-link" onmouseover="genieEffect(this)" onmouseout="resetGenieEffect(this)">{{number}}</a>
      </li>
    {{/each}}
  {{/if}}
</ul>



<script>
  async function markAsRead(articleId, newsItemId) {
    try {
      const response = await fetch(`/markAsRead/${articleId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ newsItemId }),
      });

      if (response.ok) {
        // Reload the page or update the UI as needed
        location.reload();
      } else {
        console.error('Failed to mark as read');
      }
    } catch (error) {
      console.error('Error marking as read:', error);
    }
  }

  async function deleteItem(articleId) {
    try {
      const response = await fetch(`/deleteItem/${articleId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        // Reload the page or update the UI as needed
        location.reload();
      } else {
        console.error('Failed to delete item');
      }
    } catch (error) {
      console.error('Error deleting item:', error);
    }
  }

  document.addEventListener('DOMContentLoaded', function () {
    // Add logic to update UI based on marked-as-read items
    const markedAsReadItems = document.querySelectorAll('.card.marked-as-read');

    markedAsReadItems.forEach((item) => {
      item.classList.remove('blue');
      item.classList.add('less-blue');
    });
  });
</script>





<style>
  .news-card-link {
    text-decoration: none;
    color: inherit;
  }

  .card:hover {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    transition: box-shadow 0.3s ease-in-out;
  }

  .card-action {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
  }

  .read-btn {
    margin-bottom: 10px;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    text-transform: uppercase;
    font-weight: bold;
  }

  .btn-small {
    padding: 0.5rem 1rem;
    border-radius: 4px;
    text-transform: uppercase;
    font-weight: bold;
  }

  .btn-group {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .mark-read {
    background-color: green;
    color: white;
    transition: background-color 0.3s ease-in-out;
  }

  .mark-read:hover {
    background-color: blue; /* Darker teal on hover */
  }

  .delete-item {
    background-color: #e57373; /* Red background */
    color: white;
    transition: background-color 0.3s ease-in-out;
  }

  .delete-item:hover {
    background-color: #d32f2f; /* Darker red on hover */
  }

  .marked-as-read {
  opacity: 0.8; /* Slightly less transparent */
}

.less-blue {
  background-color: #a0d9ff5b; /* Adjusted color for less blue */
}

</style>


<script>
  
function genieEffect(element) {
    element.style.zIndex = 2;
    element.style.transform = 'scaleY(1.2) translateY(-10px)';
    element.style.transition = 'transform 0.3s';
  }

  function resetGenieEffect(element) {
    element.style.zIndex = 1;
    element.style.transform = 'scaleY(1) translateY(0)';
    element.style.transition = 'transform 0.3s';
  }
</script>